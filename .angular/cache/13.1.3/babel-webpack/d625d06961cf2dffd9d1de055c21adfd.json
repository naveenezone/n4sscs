{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { ElementRef, Inject, ChangeDetectorRef, Input, Component, Optional, NgModule } from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\nconst _c0 = [\"*\"];\n\nclass Icons {\n  constructor(icons) {\n    this.icons = icons;\n  }\n\n}\n\nfunction uppercamelcase(str) {\n  return str.toLowerCase().replace(/(?:^\\w|[A-Z]|\\b\\w)/g, firstLetter => {\n    return firstLetter.toUpperCase();\n  }).replace(/[-_]/g, '');\n}\n\nlet FeatherComponent = /*#__PURE__*/(() => {\n  let FeatherComponent = class FeatherComponent {\n    constructor(elem, changeDetector, icons) {\n      this.elem = elem;\n      this.changeDetector = changeDetector;\n      this.icons = icons;\n    }\n\n    ngOnChanges(changes) {\n      // icons are provided as an array of objects because of \"multi: true\"\n      const icons = Object.assign({}, ...this.icons);\n      const svg = icons[uppercamelcase(changes.name.currentValue)] || '';\n\n      if (!svg) {\n        console.warn(`Icon not found: ${changes.name.currentValue}\\n` + `Refer to documentation on https://github.com/michaelbazos/angular-feather`);\n      }\n\n      this.elem.nativeElement.innerHTML = svg;\n      this.changeDetector.markForCheck();\n    }\n\n  };\n\n  FeatherComponent.ɵfac = function FeatherComponent_Factory(t) {\n    return new (t || FeatherComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(Icons));\n  };\n\n  FeatherComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FeatherComponent,\n    selectors: [[\"i-feather\"], [\"feather-icon\"]],\n    inputs: {\n      name: \"name\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function FeatherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{display:inline-block;width:24px;height:24px;fill:none;stroke:currentColor;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round}\"]\n  });\n\n  __decorate([Input()], FeatherComponent.prototype, \"name\", void 0);\n\n  FeatherComponent = __decorate([__param(0, Inject(ElementRef)), __param(1, Inject(ChangeDetectorRef)), __param(2, Inject(Icons))], FeatherComponent);\n  return FeatherComponent;\n})();\nvar FeatherModule_1;\nlet FeatherModule = FeatherModule_1 = class FeatherModule {\n  constructor(icons) {\n    this.icons = icons;\n\n    if (!this.icons) {\n      throw new Error(`No icon provided. Make sure to use 'FeatherModule.pick({ ... })' when importing the module\\n` + `Refer to documentation on https://github.com/michaelbazos/angular-feather`);\n    }\n  }\n\n  static pick(icons) {\n    return {\n      ngModule: FeatherModule_1,\n      providers: [{\n        provide: Icons,\n        multi: true,\n        useValue: icons\n      }]\n    };\n  }\n\n};\n\nFeatherModule.ɵfac = function FeatherModule_Factory(t) {\n  return new (t || FeatherModule)(ɵngcc0.ɵɵinject(Icons, 8));\n};\n\nFeatherModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: FeatherModule\n});\nFeatherModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\nFeatherModule.ctorParameters = () => [{\n  type: Icons,\n  decorators: [{\n    type: Optional\n  }]\n}];\n\nFeatherModule = FeatherModule_1 = __decorate([__param(0, Optional())], FeatherModule);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FeatherModule, {\n    declarations: [FeatherComponent],\n    exports: [FeatherComponent]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FeatherComponent, FeatherModule, Icons as ɵa }; //# sourceMappingURL=angular-feather.js.map","map":null,"metadata":{},"sourceType":"module"}