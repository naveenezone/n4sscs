{"ast":null,"code":"import { environment } from '../../../../../../environments/environment';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.IAM_API_URL = environment.IAM_API_URL;\n      this.helper = new JwtHelperService();\n    }\n\n    authenticate(username, password) {\n      return this.http.post(`${this.IAM_API_URL}/token/authenticate`, {\n        username,\n        password\n      }).pipe(map(data => {\n        sessionStorage.setItem('authenticated user', username);\n        sessionStorage.setItem('jwt', `${data.token}`);\n        sessionStorage.setItem('authToken', `Bearer ${data.token}`);\n        this.decodedToken = this.helper.decodeToken(data.token); // console.log(this.decodedToken);\n\n        return data;\n      }));\n    }\n\n    isUserLoggedIn() {\n      const user = sessionStorage.getItem('authenticated user');\n      const token = sessionStorage.getItem('jwt');\n      const isExpired = this.helper.isTokenExpired(token);\n      return !isExpired;\n    }\n\n    logout() {\n      sessionStorage.removeItem('authenticated user');\n      sessionStorage.removeItem('authToken');\n      sessionStorage.removeItem('jwt');\n    }\n\n    getAuthenticatedUser() {\n      return sessionStorage.getItem('authenticated user');\n    }\n\n    getAuthenticatedToken() {\n      if (this.getAuthenticatedUser()) {\n        return sessionStorage.getItem('authToken');\n      }\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}